{"version":3,"sources":["../../app-src/controllers/NegotiationController.js"],"names":["Negotiation","NegotiationService","Negotiations","NegotiationsView","Message","MessageView","InvalidDateException","DateConverter","getNegotiationDao","Bind","NegotiationController","constructor","$","document","querySelector","bind","self","_dateInput","_amountInput","_valueInput","_message","_negotiations","_service","_init","then","dao","list","negotiations","forEach","negotiation","add","catch","err","text","event","preventDefault","_createNegotiation","_clearForm","console","log","stack","message","toDate","value","parseInt","parseFloat","importNegotiations","getPeriodNegotiations","filter","toArray","some","existingNegotiation","equals","focus","clear"],"mappings":"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","file":"NegotiationController.js","sourcesContent":["import { \r\n  Negotiation, NegotiationService, Negotiations\r\n} from '../domain/index.js';\r\n\r\nimport { \r\n  NegotiationsView, Message, MessageView, InvalidDateException, DateConverter\r\n} from '../ui/index.js';\r\n\r\nimport { \r\n  getNegotiationDao, Bind\r\n} from '../util/index.js';\r\n\r\nexport class NegotiationController {\r\n  constructor() {\r\n    const $ = document.querySelector.bind(document);\r\n    const self = this;\r\n\r\n    this._dateInput = $('#date');\r\n    this._amountInput = $('#amount');\r\n    this._valueInput = $('#value');\r\n\r\n    this._message = new Bind(\r\n      new Message(),\r\n      new MessageView('#message-view'),\r\n      'text',\r\n    );\r\n\r\n    this._negotiations = new Bind(\r\n      new Negotiations(),\r\n      new NegotiationsView('#negotiations'),\r\n      'add',\r\n      'clear',\r\n    );\r\n\r\n    this._service = new NegotiationService();\r\n\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    getNegotiationDao()\r\n      .then(dao => dao.list())\r\n      .then(negotiations => negotiations\r\n        .forEach((negotiation) => this._negotiations.add(negotiation))\r\n      )\r\n      .catch(err => this._message.text = err);\r\n  }\r\n\r\n  add(event) {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      const negotiation = this._createNegotiation();\r\n\r\n      getNegotiationDao()\r\n        .then(dao => dao.add(negotiation))\r\n        .then(() => {\r\n          this._negotiations.add(negotiation);\r\n          this._message.text = 'Negotiation added successfully!';\r\n\r\n          this._clearForm();\r\n        })\r\n        .catch(err => this._message.text = err);\r\n    } catch(err) {\r\n      console.log(err);\r\n      console.log(err.stack);\r\n\r\n      this._message.text = (err instanceof InvalidDateException)\r\n        ? err.message\r\n        : 'We\\'ve found an unexpected error. Please contact customer support.';\r\n    }\r\n  }\r\n\r\n  _createNegotiation() {\r\n    return new Negotiation(\r\n      DateConverter.toDate(this._dateInput.value),\r\n      parseInt(this._amountInput.value),\r\n      parseFloat(this._valueInput.value)\r\n    );\r\n  }\r\n\r\n  importNegotiations() {\r\n    this._service\r\n      .getPeriodNegotiations()\r\n      .then((negotiations) => {\r\n        negotiations\r\n          .filter(negotiation => !this._negotiations\r\n            .toArray()\r\n            .some(existingNegotiation => negotiation.equals(existingNegotiation))\r\n          )\r\n          .forEach(negotiation => this._negotiations.add(negotiation));\r\n        this._message.text = 'Negotiations imported successfully!';\r\n      })\r\n      .catch((err) => {\r\n        this._message.text = err;\r\n      });\r\n  }\r\n\r\n  _clearForm() {\r\n    this._dateInput.value = '';\r\n    this._amountInput.value = 1;\r\n    this._valueInput.value = 0.0;\r\n\r\n    this._dateInput.focus();\r\n  }\r\n\r\n  clear() {\r\n    getNegotiationDao()\r\n      .then(dao => dao.clear())\r\n      .then(() => {\r\n        this._negotiations.clear();\r\n    \r\n        this._message.text = 'Negotiations cleared sucessfully!';\r\n      })\r\n      .catch(err => this._message.text = err);\r\n  }\r\n}"]}